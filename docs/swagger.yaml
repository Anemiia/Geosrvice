basePath: /api
definitions:
  main.Address:
    properties:
      city:
        type: string
      street:
        type: string
    type: object
  main.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  main.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  main.RequestAddressGeocode:
    properties:
      lat:
        type: string
      lng:
        type: string
    type: object
  main.RequestAddressSearch:
    properties:
      query:
        type: string
    type: object
  main.ResponseAddress:
    properties:
      addresses:
        items:
          $ref: '#/definitions/main.Address'
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple GeoService API
  title: GeoService API
  version: "1"
paths:
  /address/geocode:
    post:
      consumes:
      - json/apllication
      description: Search address by query
      parameters:
      - description: Query
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/main.RequestAddressGeocode'
      produces:
      - json/apllication
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ResponseAddress'
        "400":
          description: Invalid request format
          schema:
            type: string
        "500":
          description: Service unavailable
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Search address
      tags:
      - address
  /address/search:
    post:
      consumes:
      - application/json
      description: Search address by query
      parameters:
      - description: Query
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/main.RequestAddressSearch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.ResponseAddress'
        "400":
          description: Invalid request format
          schema:
            type: string
        "500":
          description: Service unavailable
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Search address
      tags:
      - address
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns JWT token
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid username or password
          schema:
            type: string
      summary: User login
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            type: string
        "400":
          description: Invalid request format or user already exists
          schema:
            type: string
        "500":
          description: Failed to hash password
          schema:
            type: string
      summary: Register new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
